{"version":3,"sources":["logo.svg","components/CustomNavItem.jsx","components/TopNavbar.jsx","components/DropdownMenu.jsx","components/UserItem.jsx","api/index.js","store/actions/user.js","store/actions/types.js","components/UserTable.jsx","store/reducers/users.js","store/reducers/errors.js","store/reducers/index.js","store/index.js","components/UploadProfile.jsx","components/UserModal.jsx","components/Home.jsx","components/Toast.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomNavItem","props","className","active","NavItem","children","TopNavbar","Navbar","variant","style","backgroundColor","NavbarBrand","Nav","navbar","NavLink","UserOutlined","GlobalOutlined","MessageOutlined","CustomDropdownMenu","show","UserItem","name","email","contact","address","_id","useState","toggle","setToggle","src","parseInt","index","position","Button","size","onClick","EllipsisOutlined","DropdownItem","as","edit","EditOutlined","deleteUser","DeleteOutlined","headers","Headers","append","URL","API","GetUser","id","a","fetch","method","req","json","GetAllUser","AddUser","userData","body","JSON","stringify","UpdateUser","DeleteUser","getAllUser","dispatch","type","then","res","payload","data","catch","err","console","log","UserTable","connect","state","all","users","loading","React","useEffect","length","Table","hover","colSpan","map","u","i","key","onEdit","initialState","current","usersReducer","action","error","undefined","success","statusReducer","rootReducer","combineReducers","status","store","createStore","UploadProfile","height","top","left","transform","width","DeleteFilled","opacity","cursor","UserModal","getUser","addNewUser","userdata","user","editUser","updateUser","onClose","formData","setFormData","handleAddNewUser","handleEditUser","handleChange","e","newFormData","target","value","Modal","onHide","Body","Row","Col","md","CloseOutlined","Form","onSubmit","preventDefault","logo","alt","FormGroup","FormLabel","FormControl","onChange","placeholder","required","maxLength","disabled","Home","getState","showModal","setShowModal","setEditUser","Container","fluid","PlusCircleFilled","sm","userid","Toaster","setShow","Toast","right","zIndex","minWidth","delay","Header","title","message","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a72efcd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { NavItem } from \"react-bootstrap\";\n\nexport const CustomNavItem = props => {\n  return (\n    <div className={`${props.active ? \"nav-active\" : \"\"}`}>\n      <NavItem {...props}>{props.children}</NavItem>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"react-bootstrap\";\nimport {\n  UserOutlined,\n  MessageOutlined,\n  GlobalOutlined\n} from \"@ant-design/icons\";\nimport { CustomNavItem } from \"./CustomNavItem\";\n\nexport const TopNavbar = props => {\n  return (\n    <>\n      <Navbar\n        variant={\"dark\"}\n        style={{ backgroundColor: \"var(--purple)\" }}\n        className={\"py-0\"}\n      >\n        <div className=\"d-flex justify-content-between w-100\">\n          <NavbarBrand>User Directory</NavbarBrand>\n          <Nav navbar>\n            <CustomNavItem>\n              <NavLink>Tasks</NavLink>\n            </CustomNavItem>\n            <CustomNavItem active>\n              <NavLink active>Users</NavLink>\n            </CustomNavItem>\n            <CustomNavItem>\n              <NavLink>Activity</NavLink>\n            </CustomNavItem>\n            <CustomNavItem>\n              <NavLink>Members</NavLink>\n            </CustomNavItem>\n          </Nav>\n\n          <Nav navbar>\n            <NavItem>\n              <NavLink>\n                <UserOutlined />\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink>\n                <GlobalOutlined />\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink>\n                <MessageOutlined />\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </div>\n      </Navbar>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const CustomDropdownMenu = props => {\n  return (\n    <div\n      className={`custom-dropdown-menu shadow-sm ${props.show ? \"show\" : \"\"}`}\n    >\n      {props.children}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport {\n  EllipsisOutlined,\n  DeleteOutlined,\n  EditOutlined\n} from \"@ant-design/icons\";\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\nimport { CustomDropdownMenu } from \"./DropdownMenu\";\n\nexport const UserItem = props => {\n  const { name, email, contact, address, _id } = props;\n  const [toggle, setToggle] = useState(false);\n\n  const toggleDropdown = () => {\n    setToggle(!toggle);\n  };\n\n  const editUserDetails = () => {\n    props.edit(_id);\n  };\n  const deleteUser = () => {\n    props.deleteUser(_id);\n  };\n  return (\n    <tr className=\"align-items-center\">\n      <td className=\"pl-4\">\n        <img\n          src={`https://picsum.photos/80/80?random=${(parseInt(props.index) %\n            10) +\n            1}`}\n          className=\"user-avatar mr-2\"\n        />\n\n        {name}\n      </td>\n      <td>{email}</td>\n      <td>{contact}</td>\n      <td>{address}</td>\n      <td>\n        <div style={{ position: \"relative\" }}>\n          <Button variant=\"light\" size=\"sm\" onClick={toggleDropdown}>\n            <EllipsisOutlined />\n          </Button>\n\n          <CustomDropdownMenu show={toggle}>\n            <DropdownItem as=\"div\" onClick={editUserDetails}>\n              <div className=\"d-flex align-items-center cursor-pointer\">\n                <EditOutlined className=\"mr-2\" /> Edit user details\n              </div>\n            </DropdownItem>\n            <DropdownItem as=\"div\" onClick={deleteUser}>\n              <div className=\"d-flex align-items-center cursor-pointer\">\n                <DeleteOutlined className=\"mr-2 text-danger\" /> Delete user\n              </div>\n            </DropdownItem>\n          </CustomDropdownMenu>\n        </div>\n      </td>\n    </tr>\n  );\n};\n","const headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\nconst URL = \"http://localhost:5000/api/\";\n\nconst API = {\n  GetUser: async id => {\n    const req = await fetch(URL + `users/${id}`, {\n      method: \"GET\",\n      headers: headers\n    });\n\n    return await req.json();\n  },\n\n  GetAllUser: async () => {\n    const req = await fetch(URL + `users/`, {\n      method: \"GET\",\n      headers: headers\n    });\n\n    return await req.json();\n  },\n\n  AddUser: async userData => {\n    const req = await fetch(URL + `users`, {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(userData)\n    });\n\n    return await req.json();\n  },\n\n  UpdateUser: async (id, userData) => {\n    const req = await fetch(URL + `users/${id}`, {\n      method: \"PUT\",\n      headers: headers,\n      body: JSON.stringify(userData)\n    });\n\n    return await req.json();\n  },\n\n  DeleteUser: async id => {\n    const req = await fetch(URL + `users/${id}`, {\n      method: \"DELETE\",\n      headers: headers\n    });\n\n    return await req.json();\n  }\n};\n\nexport default API;\n","import {\n  GET_USER,\n  GET_USER_SUCCESS,\n  GET_ALL_USER,\n  GET_ALL_USER_SUCCESS,\n  ADD_USER,\n  ADD_USER_SUCCESS,\n  EDIT_USER,\n  EDIT_USER_SUCCESS,\n  DELETE_USER_SUCCESS,\n  SUCCESS,\n  ERROR\n} from \"./types\";\nimport API from \"../../api\";\n\nexport const getUser = (id, dispatch) => {\n  dispatch({ type: GET_USER });\n\n  API.GetUser(id)\n    .then(res => {\n      dispatch({ type: GET_USER_SUCCESS, payload: res.data });\n    })\n    .catch(err =>\n      dispatch({ type: ERROR, payload: \"Error Getting User Data\" })\n    );\n};\n\nexport const getAllUser = dispatch => {\n  dispatch({ type: GET_ALL_USER });\n\n  API.GetAllUser()\n    .then(res => {\n      dispatch({ type: GET_ALL_USER_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({ type: ERROR, payload: \"Error Getting User Data\" });\n    });\n};\n\nexport const addNewUser = (user, dispatch) => {\n  dispatch({ type: ADD_USER });\n\n  API.AddUser(user)\n    .then(res => {\n      dispatch({ type: ADD_USER_SUCCESS, payload: res.data });\n      dispatch({ type: SUCCESS, payload: \"User added successfully\" });\n    })\n    .catch(err => dispatch({ type: ERROR, payload: \"Error adding new User\" }));\n};\n\nexport const updateUser = (id, userData, dispatch) => {\n  dispatch({ type: EDIT_USER });\n\n  API.UpdateUser(id, userData)\n    .then(res => {\n      dispatch({ type: EDIT_USER_SUCCESS, payload: res.data });\n      dispatch({ type: SUCCESS, payload: \"User details updated successfully\" });\n    })\n    .catch(err => dispatch({ type: ERROR, payload: \"Error editing user\" }));\n};\n\nexport const deleteUser = (id, dispatch) => {\n  dispatch({ type: EDIT_USER });\n\n  API.DeleteUser(id)\n    .then(res => {\n      dispatch({ type: DELETE_USER_SUCCESS, payload: res.data });\n      dispatch({ type: SUCCESS, payload: \"User  deleted successfully\" });\n    })\n    .catch(err => dispatch({ type: ERROR, payload: \"Error deleting user\" }));\n};\n","export const ADD_USER = \"ADD_USER\";\nexport const ADD_USER_SUCCESS = \"ADD_USER_SUCCESS\";\nexport const EDIT_USER = \"EDIT_USER\";\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\nexport const GET_USER = \"GET_USER\";\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\nexport const GET_ALL_USER = \"GET_ALL_USER\";\nexport const GET_ALL_USER_SUCCESS = \"GET_ALL_USER_SUCCESS\";\nexport const ERROR = \"ERROR\";\nexport const SUCCESS = \"SUCCESS\";\nexport const RESET = \"RESET\";\nexport const RESET_CURRENT_USER = \"RESET_CURRENT_USER\";\n","import React from \"react\";\nimport { UserItem } from \"./UserItem\";\nimport { Table } from \"react-bootstrap\";\nimport { getAllUser, deleteUser } from \"../store/actions/user\";\nimport { connect } from \"react-redux\";\n\nexport const InnerUserTable = props => {\n  React.useEffect(() => {\n    if (!props.all.length) props.getAllUser();\n  }, []);\n\n  return (\n    <Table hover className={\"mb-0\"}>\n      <thead>\n        <tr>\n          <th className=\"pl-4 text-muted\">USER NAME</th>\n          <th className=\"text-muted\">ADDRESS</th>\n          <th className=\"text-muted\">CONTACT</th>\n          <th className=\"text-muted\">EMAIL</th>\n          <th className=\"text-muted\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.loading ? (\n          <tr>\n            <td colSpan=\"5\" className=\"text-center\">\n              Please wait...\n            </td>\n          </tr>\n        ) : props.all.length ? (\n          props.all.map((u, i) => (\n            <UserItem\n              {...u}\n              index={i}\n              key={i}\n              edit={props.onEdit}\n              deleteUser={props.deleteUser}\n            />\n          ))\n        ) : (\n          <tr>\n            <td colSpan=\"5\" className=\"text-center\">\n              No user found\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    all: state.users.all,\n    loading: state.users.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllUser: () => getAllUser(dispatch),\n    deleteUser: id => deleteUser(id, dispatch)\n  };\n};\n\nexport const UserTable = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InnerUserTable);\n","import {\n  GET_USER,\n  GET_USER_SUCCESS,\n  GET_ALL_USER,\n  GET_ALL_USER_SUCCESS,\n  EDIT_USER,\n  ADD_USER,\n  ADD_USER_SUCCESS,\n  EDIT_USER_SUCCESS,\n  DELETE_USER,\n  DELETE_USER_SUCCESS,\n  RESET_CURRENT_USER\n} from \"../actions/types\";\n\nconst initialState = {\n  loading: false,\n  all: [],\n  current: {}\n};\n\nconst usersReducer = (state = initialState, action) => {\n  const { payload, type } = action;\n  switch (type) {\n    case GET_USER:\n      return { ...state, loading: true };\n\n    case GET_USER_SUCCESS:\n      return { ...state, loading: false, current: payload };\n\n    case GET_ALL_USER:\n      return { ...state, loading: true };\n\n    case GET_ALL_USER_SUCCESS:\n      return { ...state, loading: false, all: payload };\n\n    case ADD_USER:\n      return { ...state, loading: true };\n\n    case ADD_USER_SUCCESS:\n      return { ...state, loading: false, current: null };\n\n    case EDIT_USER:\n      return { ...state, loading: true };\n\n    case EDIT_USER_SUCCESS:\n      return { ...state, loading: false, current: null };\n\n    case DELETE_USER:\n      return { ...state, loading: true };\n\n    case DELETE_USER_SUCCESS:\n      return { ...state, loading: false, current: null };\n\n    case RESET_CURRENT_USER:\n      return { ...state, current: null };\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\n","import { ERROR, SUCCESS, RESET } from \"../actions/types\";\n\nconst initialState = {\n  error: undefined,\n  success: undefined\n};\n\nconst statusReducer = (state = initialState, action) => {\n  const { payload, type } = action;\n  switch (type) {\n    case ERROR:\n      return { ...state, success: undefined, error: payload };\n\n    case SUCCESS:\n      return { ...state, error: undefined, success: payload };\n\n    case RESET:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default statusReducer;\n","import { combineReducers } from \"redux\";\nimport usersReducer from \"./users\";\nimport statusReducer from \"./errors\";\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  status: statusReducer\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport { FormFile, Button } from \"react-bootstrap\";\nimport { DeleteFilled } from \"@ant-design/icons\";\nimport store from \"../store\";\n\nexport const UploadProfile = ({ edit }) => {\n  return (\n    <div\n      className=\"w-100\"\n      style={{ position: \"relative\", height: \"fa-thermometer-30px\" }}\n    >\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: \"100%\"\n        }}\n        className=\"text-center\"\n      >\n        {edit ? (\n          <>\n            <Button variant=\"outline-primary\" size=\"sm\">\n              Change\n            </Button>\n            <DeleteFilled className=\"text-danger\" />\n          </>\n        ) : (\n          <Button variant=\"outline-primary\" size=\"sm\">\n            Upload\n          </Button>\n        )}\n      </div>\n      <input\n        type=\"file\"\n        name=\"profile\"\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          opacity: 0,\n          cursor: \"pointer\"\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  Row,\n  Button,\n  Col,\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl\n} from \"react-bootstrap\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport logo from \"../logo.svg\";\nimport { UploadProfile } from \"./UploadProfile\";\nimport {\n  getUser,\n  addNewUser,\n  getAllUser,\n  updateUser\n} from \"../store/actions/user\";\nimport { connect } from \"react-redux\";\nimport store from \"../store\";\n\nexport const InnerUserModal = ({\n  show,\n  onClose,\n  edit,\n  current,\n  getUser,\n  addNewUser,\n  getAllUser,\n  loading,\n  status,\n  editUser\n}) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    contact: \"\",\n    id: \"\"\n  });\n\n  console.log(edit);\n  React.useEffect(() => {\n    if (edit) {\n      getUser(edit);\n    } else {\n      setFormData({\n        name: \"\",\n        email: \"\",\n        address: \"\",\n        contact: \"\",\n        id: \"\"\n      });\n    }\n  }, [edit]);\n\n  React.useEffect(() => {\n    if (current) {\n      setFormData(current);\n    }\n  }, [current]);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (edit) {\n      handleEditUser();\n    } else {\n      handleAddNewUser();\n    }\n  };\n\n  const handleAddNewUser = () => {\n    const { id, ...userdata } = formData;\n    addNewUser(userdata);\n  };\n\n  const handleEditUser = () => {\n    const { id, ...userdata } = formData;\n    editUser(edit, userdata);\n  };\n\n  React.useEffect(() => {\n    if (status.success) {\n      getAllUser();\n    }\n  }, [status.success]);\n\n  const handleChange = e => {\n    let newFormData = { ...formData, [e.target.name]: e.target.value };\n\n    setFormData(newFormData);\n  };\n  return (\n    <Modal show={show} onHide={onClose} size=\"lg\">\n      <Modal.Body className={\"bg-light px-5 py-4\"}>\n        <Row className=\"mt-3\">\n          <Col md={6} className={\"d-flex align-items-center\"}>\n            <h6> {`${edit ? \"Edit Details\" : \"Add new User\"}`}</h6>\n          </Col>\n          <Col md={6} className={\"text-right\"}>\n            <CloseOutlined onClick={onClose} />\n          </Col>\n        </Row>\n        <Form\n          action=\"\"\n          method=\"POST\"\n          onSubmit={handleFormSubmit}\n          className={\"mt-3\"}\n        >\n          <Row>\n            <Col md={4}>\n              <img\n                src={logo}\n                className={\"w-75 mx-auto d-block\"}\n                alt=\"Upload image\"\n              />\n\n              <UploadProfile />\n            </Col>\n            <Col md={8}>\n              <FormGroup>\n                <FormLabel>User Name</FormLabel>\n                <FormControl\n                  value={formData.name}\n                  type=\"text\"\n                  onChange={handleChange}\n                  name=\"name\"\n                  placeholder=\"John Doe\"\n                  required\n                ></FormControl>\n              </FormGroup>\n\n              <FormGroup>\n                <FormLabel>Address</FormLabel>\n                <FormControl\n                  value={formData.address}\n                  type=\"text\"\n                  onChange={handleChange}\n                  name=\"address\"\n                  placeholder=\"New Street, any City, Country\"\n                  required\n                ></FormControl>\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <FormGroup>\n                <FormLabel>Contact</FormLabel>\n                <FormControl\n                  value={formData.contact}\n                  type=\"text\"\n                  onChange={handleChange}\n                  name=\"contact\"\n                  maxLength=\"10\"\n                  placeholder=\"9876543234\"\n                  required\n                ></FormControl>\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup>\n                <FormLabel>Email</FormLabel>\n                <FormControl\n                  required\n                  value={formData.email}\n                  type=\"text\"\n                  onChange={handleChange}\n                  name=\"email\"\n                  placeholder=\"john@example.com\"\n                ></FormControl>\n              </FormGroup>\n            </Col>\n          </Row>\n          <FormGroup>\n            <Button\n              disabled={loading}\n              className=\"w-100\"\n              type=\"submit\"\n              variant=\"primary\"\n            >\n              {edit ? \"Edit Details\" : \"Add new User\"}\n            </Button>\n          </FormGroup>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    getUser: id => {\n      getUser(id, dispatch);\n    },\n    addNewUser: userdata => addNewUser(userdata, dispatch),\n    getAllUser: () => getAllUser(dispatch),\n    editUser: (id, userData) => updateUser(id, userData, dispatch)\n  };\n};\n\nexport const mapStateToProps = state => ({\n  current: state.users.current,\n  loading: state.users.loading,\n  status: state.status\n});\n\nexport const UserModal = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InnerUserModal);\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  Table\n} from \"react-bootstrap\";\nimport {\n  UserOutlined,\n  PlusCircleFilled,\n  EllipsisOutlined\n} from \"@ant-design/icons\";\nimport { CustomNavItem } from \"./CustomNavItem\";\nimport { TopNavbar } from \"./TopNavbar\";\nimport { UserTable } from \"./UserTable\";\nimport { UserModal } from \"./UserModal\";\nimport store from \"../store\";\nimport { RESET_CURRENT_USER } from \"../store/actions/types\";\n\nexport const Home = props => {\n  console.log(store.getState());\n  const [showModal, setShowModal] = useState(false);\n  const [editUser, setEditUser] = useState(null);\n\n  const handleModalClose = () => {\n    setShowModal(false);\n    store.dispatch({ type: RESET_CURRENT_USER });\n  };\n\n  const addNewUser = () => {\n    setShowModal(true);\n    setEditUser(null);\n  };\n\n  const editUserDetails = userid => {\n    setEditUser(userid);\n    setShowModal(true);\n  };\n  return (\n    <>\n      <UserModal edit={editUser} show={showModal} onClose={handleModalClose} />\n      <TopNavbar />\n      <Container fluid>\n        <Row className={\"py-5 bg-white shadow-sm\"}>\n          <Col\n            className={\n              \"mx-auto d-flex justify-content-between align-item-center\"\n            }\n            md={9}\n          >\n            <h3>User Directory</h3>\n            <Button variant=\"primary\" onClick={addNewUser}>\n              <div className=\"d-flex align-items-center\">\n                <PlusCircleFilled className=\"mr-2\" /> Add new User\n              </div>\n            </Button>\n          </Col>\n        </Row>\n\n        <Row className=\"mt-4\">\n          <Col md={9} sm={12} className={\"mx-auto shadow-sm bg-white px-0\"}>\n            <UserTable onEdit={editUserDetails} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Toast, Alert } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { RESET } from \"../store/actions/types\";\nimport store from \"../store\";\n\nexport const Toaster = props => {\n  const [show, setShow] = useState(true);\n\n  const _onClose = () => {\n    store.dispatch({ type: RESET });\n    setShow(false);\n  };\n\n  return (\n    <Toast\n      style={{\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"10px\",\n        zIndex: 1110,\n        minWidth: \"200px\"\n      }}\n      delay={5000}\n      show={show}\n      onClose={_onClose}\n    >\n      <Toast.Header\n        className={`d-flex justify-content-between ${\n          props.type === \"success\" ? \"text-success\" : \"text-danger\"\n        }`}\n      >\n        <strong>{props.title}</strong>\n      </Toast.Header>\n      <Toast.Body\n        className={`${\n          props.type === \"success\" ? \"text-success\" : \"text-danger\"\n        }`}\n      >\n        {props.message}\n      </Toast.Body>\n    </Toast>\n  );\n};\n","import React from \"react\";\nimport { Home } from \"./components/Home\";\nimport { Provider, connect } from \"react-redux\";\nimport store from \"./store\";\nimport { Toaster } from \"./components/Toast\";\n\nfunction App(props) {\n  return (\n    <>\n      {props.success ? (\n        <Toaster type={\"success\"} title={\"Success\"} message={props.success} />\n      ) : (\n        <></>\n      )}\n\n      {props.error ? (\n        <Toaster type={\"error\"} title={\"Error Occured\"} message={props.error} />\n      ) : (\n        <></>\n      )}\n      <Home></Home>\n    </>\n  );\n}\n\nexport const mapStateToProps = state => {\n  return {\n    success: state.status.success,\n    error: state.status.error\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}